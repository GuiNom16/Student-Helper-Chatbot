// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Report screen screen renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#d3d3d3",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />
  <Text
    style={
      Object {
        "fontSize": 18,
        "fontWeight": "bold",
      }
    }
  >
    Help us get better at what we do
  </Text>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "borderRadius": 20,
        "height": 500,
        "margin": 30,
        "padding": 20,
        "width": 320,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "#d3d3d3",
          "borderColor": "gray",
          "borderRadius": 8,
          "borderWidth": 0.5,
          "height": 50,
          "justifyContent": "center",
          "paddingHorizontal": 8,
        }
      }
    >
      <View
        accessible={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 35,
            "justifyContent": "space-between",
          }
        }
      >
        <Image
          color="black"
          name="Safety"
          size={20}
          source={1}
          style={
            Object {
              "height": 35,
              "marginRight": 5,
              "width": 35,
            }
          }
        />
        <Text
          style={
            Array [
              Object {
                "flex": 1,
                "fontSize": 16,
                "writingDirection": "ltr",
              },
              undefined,
              Object {},
            ]
          }
        >
          Pick problematic chatbot
        </Text>
        <Image
          source={1}
          style={
            Object {
              "height": 20,
              "tintColor": "gray",
              "width": 20,
            }
          }
        />
      </View>
    </View>
    <Text
      style={
        Object {
          "marginTop": 10,
        }
      }
    >
      Type:
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": "#d3d3d3",
            "borderRadius": 10,
            "color": "black",
            "marginTop": 10,
            "padding": 10,
          }
        }
      >
        Off Topic Response
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": "#d3d3d3",
            "borderRadius": 10,
            "color": "black",
            "marginTop": 10,
            "padding": 10,
          }
        }
      >
        Misleading or Deceiving response
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": "#d3d3d3",
            "borderRadius": 10,
            "color": "black",
            "marginTop": 10,
            "padding": 10,
          }
        }
      >
        Other
      </Text>
    </View>
    <Text
      style={
        Object {
          "marginTop": 10,
        }
      }
    >
      Description:
    </Text>
    <TextInput
      multiline={true}
      onChangeText={[Function]}
      placeholder="Explain issue in more details"
      style={
        Object {
          "backgroundColor": "#d3d3d3",
          "borderRadius": 20,
          "height": 180,
          "marginTop": 10,
          "padding": 10,
          "textAlignVertical": "top",
        }
      }
      value=""
    />
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0474ea",
        "borderRadius": 25,
        "color": "white",
        "height": 50,
        "justifyContent": "center",
        "opacity": 1,
        "width": "65%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontSize": 18,
          "fontWeight": "bold",
        }
      }
    >
      Send Feedback
    </Text>
  </View>
</View>
`;
